# Example UC config file demonstrating correct variable layout.
# There are six required parameters for each variable 
#	name - The name of the variable, must conform to C naming convention. 
#	desc - A description of the variable, used to populate C header file comments and GUI. 
#	value - The variable value flashed to the microcontroller. 
#	dataType - A valid C type for the variable, options are:
#		uint8_t - Unsigned 8-bit integer. 
#		int8_t - Signed 8-bit integer. 
#		uint16_t - Unsigned 16-bit integer. 
#		int16_t - Signed 16-bit integer. 
#		uint32_t - Unsigned 32-bit integer. 
#		int32_t - Signed 32-bit integer. 
#		float -  Floating point, up to four decimal point percision. 
#		char - An ASCII character - valid from ASCII 32 to ASCII 127. 
#	max - The maximum allowed value, should be less the variable type's maximum. 
#	min - The minimum allowed value, should be less the variable type's minimum. 

- dataType: uint8_t
  desc: Example unsigned 8 bit integer
  max: 255
  min: 0
  name: U8
  value: 20

- dataType: int8_t
  desc: Example signed 8 bit integer
  max: 127
  min: -127
  name: S8
  value: -30

- dataType: uint16_t
  desc: Example unsigned 16 bit integer
  max: 65535
  min: 0
  name: U16
  value: 532

- dataType: int16_t
  desc: Example signed 16 bit integer
  max: 32767
  min: -32767
  name: S16
  value: -2355

- dataType: uint32_t
  desc: Example unsigned 32 bit integer
  max: 4294967295
  min: 0
  name: U32
  value: 500000

- dataType: int32_t
  desc: Example signed 32 bit integer
  max: 2147483647
  min: -2147483647
  name: S32
  value: 123

- dataType: float
  desc: Example float, 4 decimal point percision
  max: 214748
  min: -214748
  name: F
  value: 12.5943

- dataType: char
  desc: Example character, ASCII
  max: 127
  min: 32
  name: C
  value: 64

